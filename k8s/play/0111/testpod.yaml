apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"myapp"},"name":"myapp-pod","namespace":"ez"},"spec":{"containers":[{"command":["sh","-c","echo The app is running! \u0026\u0026 sleep 3600"],"image":"busybox:1.28","name":"myapp-container"}],"initContainers":[{"command":["sh","-c","until nslookup myservice; do echo waiting for myservice; sleep 2; done;"],"image":"busybox:1.28","name":"init-myservice"},{"command":["sh","-c","until nslookup mydb; do echo waiting for mydb; sleep 2; done;"],"image":"busybox:1.28","name":"init-mydb"}]}}
  creationTimestamp: "2021-11-01T20:07:19Z"
  labels:
    app: myapp
  name: myapp-pod
  namespace: ez
  resourceVersion: "319489"
  uid: c6297a96-f87d-4ac0-9a66-9baab6fbf779
spec:
  containers:
  - command:
    - sh
    - -c
    - echo The app is running! && sleep 3600
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: myapp-container
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-k4ntl
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - -c
    - until nslookup myservice; do echo waiting for myservice; sleep 2; done;
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: init-myservice
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-k4ntl
      readOnly: true
  - command:
    - sh
    - -c
    - until nslookup mydb; do echo waiting for mydb; sleep 2; done;
    image: busybox:1.28
    imagePullPolicy: IfNotPresent
    name: init-mydb
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-k4ntl
      readOnly: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-k4ntl
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-11-01T20:07:19Z"
    message: 'containers with incomplete status: [init-myservice init-mydb]'
    reason: ContainersNotInitialized
    status: "False"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-11-01T20:07:19Z"
    message: 'containers with unready status: [myapp-container]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-11-01T20:07:19Z"
    message: 'containers with unready status: [myapp-container]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-11-01T20:07:19Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: busybox:1.28
    imageID: ""
    lastState: {}
    name: myapp-container
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: PodInitializing
  hostIP: 192.168.49.2
  initContainerStatuses:
  - containerID: docker://29152c7cbb98b085676dfe9474f3078eace7c58a363587f68ab7ded28c2b9a2f
    image: busybox:1.28
    imageID: docker-pullable://busybox@sha256:141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47
    lastState: {}
    name: init-myservice
    ready: false
    restartCount: 0
    state:
      running:
        startedAt: "2021-11-01T20:07:22Z"
  - image: busybox:1.28
    imageID: ""
    lastState: {}
    name: init-mydb
    ready: false
    restartCount: 0
    state:
      waiting:
        reason: PodInitializing
  phase: Pending
  podIP: 172.17.0.8
  podIPs:
  - ip: 172.17.0.8
  qosClass: BestEffort
  startTime: "2021-11-01T20:07:19Z"
